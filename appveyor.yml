clone_folder: c:\project\opencpn\shipdriver_pi
shallow_clone: false
clone_depth: 10

image:
- Visual Studio 2017

platform: 
# - x64
- Win32

configuration: RelWithDebInfo
test: OFF

install:
  # VS2015 and earlier version - '"C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x86'
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  
  # set environment variables for wxWidgets
  - set WXWIN=C:\wxWidgets-3.1.2
  - set wxWidgets_ROOT_DIR=%WXWIN%
  - set wxWidgets_LIB_DIR=%WXWIN%\lib\vc_dll
  - cmd: SET PATH=%PATH%;%WXWIN%;%wxWidgets_LIB_DIR%;C:\Program Files (x86)\Poedit\Gettexttools\bin;

  # install dependencies:
  - choco install poedit

  # Download and unzip wxwidgets
  - ps: Start-FileDownload https://download.opencpn.org/s/E2p4nLDzeqx4SdX/download -FileName wxWidgets-3.1.2.7z
  - cmd: 7z x wxWidgets-3.1.2.7z -o%WXWIN% > null

  # some debugging information
  # - cmake --help
  # - set Displays sensitive password!

  # build wxWidgets - Disabled as we provide prebuilt WX to save time
  #- cmd: cd %WXWIN%\build\msw\
  #- cmd: nmake -f makefile.vc BUILD=release SHARED=1 CFLAGS=/D_USING_V120_SDK71_ CXXFLAGS=/D_USING_V120_SDK71_
  #- cmd: nmake -f makefile.vc BUILD=debug SHARED=1 CFLAGS=/D_USING_V120_SDK71_ CXXFLAGS=/D_USING_V120_SDK71_

before_build:
  # Unless removed, these interferes with the 32-bit python installation
  - rmdir /Q /S C:\Python26-x64
  - rmdir /Q /S C:\Python27-x64
  - rmdir /Q /S C:\Python33-x64
  - rmdir /Q /S C:\Python34-x64
  - rmdir /Q /S C:\Python35-x64
  - rmdir /Q /S C:\Python36-x64
  - rmdir /Q /S C:\Python37-x64
  - rmdir /Q /S C:\Python38-x64
  - cmd: SET PATH=C:\Python38;C:\Python38\Scripts;%PATH%
  - py --version
  - py -m ensurepip
  - py -m pip install --upgrade pip
  - py -m pip install -q setuptools wheel
  - py -m pip install -q cloudsmith-cli
  - pip install cryptography
  - mkdir build
  - cd build
  - cmake -T v141_xp ..

build_script:
  - cmake -G "Visual Studio 15 2017" --config RelWithDebInfo  ..
  - cmake --build . --target tarball --config RelWithDebInfo
  - choco install git
  - bash ./upload.sh
  - cd ..\ci
  - py git-push

artifacts:
  - path: 'build\*.exe'
    name: installer

deploy:
  description: 'release created by AppVeyor CI'
  provider: GitHub
  auth_token:
    secure: 7c7f490c533dab87ca6592dcae9d5cd158ad0f58
  artifact: installer,portable
  draft: true
  prerelease: true
  tag: $(APPVEYOR_REPO_TAG_NAME)
  on:
    APPVEYOR_REPO_TAG: true # deploy on tag push only
