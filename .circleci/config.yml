---
version: 2.1

debian-steps: &debian-steps
  steps:
    - checkout
    - run: ci/circleci-build-debian.sh
    - run: sh -c "ldd  build/app/*/lib/opencpn/*.so"
    - run: cd build; /bin/bash < upload.sh
    - run: python3 ci/git-push

flatpak-steps: &flatpak-steps
  steps:
    - checkout
    - restore_cache:
        keys:
          - <<parameters.cache-key>>-{{ checksum "ci/circleci-build-flatpak.sh" }}
    - run: ci/circleci-build-flatpak.sh
    - save_cache:
        key: <<parameters.cache-key>>-{{ checksum "ci/circleci-build-flatpak.sh" }}
        paths:
          - /home/circleci/.local/share/flatpak/repo
    - run: cd build; /bin/bash < upload.sh
    - run: python3 ci/git-push

jobs:

  build-raspbian-bullseye:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    environment:
      - OCPN_TARGET: flatpak-arm64
    parameters:
      cache-key:
        type: string
        default: "fp-arm20-v2"
    steps:
      - checkout
      - run: ci/generic-build-raspbian-armhf.sh
      - run: cd build; /bin/bash < upload.sh
      - run: python3 ci/git-push

  build-flatpak-arm64:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    environment:
      - OCPN_TARGET: flatpak-arm64
    parameters:
      cache-key:
        type: string
        default: "fp-arm20-v2"
    <<: *flatpak-steps

  build-flatpak-x86-1808:
    machine:
      image: ubuntu-2004:202010-01
    environment:
      - OCPN_TARGET: flatpak
      - BUILD_1808: "true"
    parameters:
      cache-key:
        type: string
        default: "fp-x86-18-v2"
    <<: *flatpak-steps

  build-flatpak-x86-2008:
    machine:
      image: ubuntu-2004:202010-01
    environment:
      - OCPN_TARGET: flatpak
    parameters:
      cache-key:
        type: string
        default: "fp-x86-20-v2"
    <<: *flatpak-steps

 
  build-macos:
    macos:
      xcode: "12.5.1"
    environment:
      - OCPN_TARGET: macos
    steps:
      - checkout
      - run: ci/circleci-build-macos.sh
      - run: sh -c "otool -L build/app/*/OpenCPN.app/Contents/PlugIns/*.dylib"
      - run: cd build; /bin/bash < upload.sh
      - run: python3 ci/git-push

  build-xenial:
    docker:
      - image: circleci/buildpack-deps:xenial-scm
    environment:
      - OCPN_TARGET: xenial
      - USE_DEADSNAKES_PY37: 1
    <<: *debian-steps

  build-bionic:
    docker:
      - image: circleci/buildpack-deps:bionic-scm
    environment:
      - OCPN_TARGET: bionic
    <<: *debian-steps

  build-bionic-gtk3:
    docker:
      - image: circleci/buildpack-deps:bionic-scm
    environment:
      - BUILD_GTK3: true
      - OCPN_TARGET: bionic-gtk3
    <<: *debian-steps

  build-focal:
    docker:
      - image: circleci/buildpack-deps:focal-scm
    environment:
      - OCPN_TARGET: focal
    <<: *debian-steps

  build-buster:
    docker:
      - image: circleci/buildpack-deps:buster-scm
    environment:
      - OCPN_TARGET: buster
    <<: *debian-steps

  build-android-arm64:
    docker:
      - image: circleci/android:api-28-ndk
    environment:
      - OCPN_TARGET: android-arm64
    steps:
      - checkout
      - run: ci/circleci-build-android-arm64.sh
      - run: cd build; /bin/bash < upload.sh
      - run: python3 ci/git-push

  build-android-armhf:
    docker:
      - image: circleci/android:api-28-ndk
    environment:
      - OCPN_TARGET: android-armhf
    steps:
      - checkout
      - run: ci/circleci-build-android-armhf.sh
      - run: cd build; /bin/bash < upload.sh
      - run: python3 ci/git-push


std-filters: &std-filters
  filters:
    branches:
      ignore:
        - tmp
        - /tmp-.*/

workflows:
  version: 2
  build_all:
    jobs:

      - build-flatpak-arm64:
          <<: *std-filters

      - build-flatpak-x86-1808:
          <<: *std-filters

      - build-flatpak-x86-2008:
          <<: *std-filters
 
      - build-macos:
          <<: *std-filters

      - build-xenial:
          <<: *std-filters

      - build-bionic-gtk3:
          <<: *std-filters

      - build-bionic:
          <<: *std-filters

      - build-focal:
          <<: *std-filters

      - build-buster:
          <<: *std-filters

      - build-android-arm64:
          <<: *std-filters

      - build-android-armhf:
          <<: *std-filters

      - build-raspbian-bullseye:
          <<: *std-filters

 
